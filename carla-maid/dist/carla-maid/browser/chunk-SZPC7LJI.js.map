{
  "version": 3,
  "sources": ["src/app/view-blogs/view-blogs.component.ts", "src/app/view-blogs/view-blogs.component.html"],
  "sourcesContent": ["import { Component, input } from '@angular/core';\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\nimport { WordPressService } from '../shared/services/word-press.service';\nimport { SharedService } from '../shared/services/shared.service';\nimport { BlogsListComponent } from '../blogs-list/blogs-list.component';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-view-blogs',\n  standalone: true,\n  imports: [\n    TranslateModule,\n    CommonModule\n  ],\n  templateUrl: './view-blogs.component.html',\n  styleUrl: './view-blogs.component.sass'\n})\nexport class ViewBlogsComponent {\n  lang: string;\n  posts!: any[];\n  blogsPosts!: any[];\n\n  selectedPost: any;\n\n  id = input.required<string>();\n\n  constructor(\n    private translateService: TranslateService,\n    private _wordPressService: WordPressService,\n    protected _sharedService: SharedService,\n  ) {\n\n    this.lang = this.translateService.currentLang || 'en';\n    this.translateService.onLangChange.subscribe(() => {\n      this.lang = this.translateService.currentLang || 'en';\n    });\n\n    this.getPosts();\n  }\n  ngOnInit(){\n    this.getPosts();\n  }\n\n  getPosts(): void {\n    const postsPage = 'blogs';\n    const categoriesNames = [postsPage, this.lang];\n\n    const params = {\n      per_page: 100,\n      page: 1\n    };\n\n    this._wordPressService.getPosts(params).subscribe({\n      next: (value: any) => {\n        this.selectedPost = value.filter((post:any) => post.id == this.id())[0];\n      }\n    });\n  }\n\n\n}\n", "<section class=\"section-1 center flex-column\">\n    <h1 class=\"text-align-center hero-title\">{{\"shared.BestCleaningCompanyInQatar\" | translate}}:<br>\n      {{\"shared.FindReliableProfessionalCleaningServices\" | translate}}</h1>\n  </section>\n\n\n  <div *ngIf=\"selectedPost\" class=\"container\">\n    <h2 [innerHTML]=\"_sharedService.sanitizeHtml( selectedPost.title.rendered)\"></h2>\n    <p [innerHTML]=\"_sharedService.sanitizeHtml(selectedPost.content.rendered)\"></p>\n</div>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACME,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,MAAA,CAAA,EAAiF,GAAA,KAAA,CAAA;AAErF,IAAA,uBAAA;;;;AAFQ,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,eAAA,aAAA,OAAA,aAAA,MAAA,QAAA,GAAA,wBAAA;AACD,IAAA,oBAAA;AAAA,IAAA,qBAAA,aAAA,OAAA,eAAA,aAAA,OAAA,aAAA,QAAA,QAAA,GAAA,wBAAA;;;ADSD,IAAO,sBAAP,MAAO,oBAAkB;EAS7B,YACU,kBACA,mBACE,gBAA6B;AAF/B;AACA;AACE;AAXZ;AACA;AACA;AAEA;AAEA,8BAAK,MAAM,SAAQ;AAGT,SAAA,mBAAA;AACA,SAAA,oBAAA;AACE,SAAA,iBAAA;AAGV,SAAK,OAAO,KAAK,iBAAiB,eAAe;AACjD,SAAK,iBAAiB,aAAa,UAAU,MAAK;AAChD,WAAK,OAAO,KAAK,iBAAiB,eAAe;IACnD,CAAC;AAED,SAAK,SAAQ;EACf;EACA,WAAQ;AACN,SAAK,SAAQ;EACf;EAEA,WAAQ;AACN,UAAM,YAAY;AAClB,UAAM,kBAAkB,CAAC,WAAW,KAAK,IAAI;AAE7C,UAAM,SAAS;MACb,UAAU;MACV,MAAM;;AAGR,SAAK,kBAAkB,SAAS,MAAM,EAAE,UAAU;MAChD,MAAM,CAAC,UAAc;AACnB,aAAK,eAAe,MAAM,OAAO,CAAC,SAAa,KAAK,MAAM,KAAK,GAAE,CAAE,EAAE,CAAC;MACxE;KACD;EACH;;cAxCW;mCAAA,qBAAkB,4BAAA,gBAAA,GAAA,4BAAA,gBAAA,GAAA,4BAAA,aAAA,CAAA;AAAA;cAAlB,sFAAA,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,QAAA,EAAA,IAAA,CAAA,GAAA,IAAA,EAAA,GAAA,YAAA,MAAA,UAAA,CAAA,6BAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,aAAA,UAAA,aAAA,GAAA,CAAA,GAAA,qBAAA,YAAA,GAAA,CAAA,SAAA,aAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,WAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACjB/B,IAAA,yBAAA,GAAA,WAAA,CAAA,EAA8C,GAAA,MAAA,CAAA;AACD,IAAA,iBAAA,CAAA;;AAAoD,IAAA,oBAAA,GAAA,IAAA;AAC3F,IAAA,iBAAA,CAAA;;AAAiE,IAAA,uBAAA,EAAK;AAI1E,IAAA,qBAAA,GAAA,mCAAA,GAAA,GAAA,OAAA,CAAA;;;AAL2C,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,IAAA,sBAAA,GAAA,GAAA,mCAAA,GAAA,GAAA;AACvC,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,iDAAA,GAAA,EAAA;AAIE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA;;kBDKJ,iBAAe,eACf,cAAY,IAAA,GAAA,QAAA,CAAA,8oBAAA,EAAA,CAAA;AAKV,IAAO,qBAAP;;6EAAO,oBAAkB,EAAA,WAAA,qBAAA,CAAA;AAAA,GAAA;",
  "names": []
}
