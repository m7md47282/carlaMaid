import './polyfills.server.mjs';
import{a as i}from"./chunk-KXRIUOOB.mjs";import{b as m}from"./chunk-DBCEDDZI.mjs";import{A as s,Z as l,ca as d,k as a,n}from"./chunk-5TZEICSS.mjs";var p=class o{constructor(t){this.http=t}backendApiUrl=i.backendApiUrl;validPaymentStatuses=["pending","completed","failed","cancelled"];maxAmount=1e5;createPayment(t){let e=`${this.backendApiUrl}/skipcash/payment/create`,r=this.buildPaymentPayload(t);return this.http.post(e,r).pipe(n(this.handlePaymentCreationResponse.bind(this)),s(this.handlePaymentError.bind(this)))}checkPaymentStatus(t){let e=`${this.backendApiUrl}/payment/status-skip-cash/${t}`;return this.http.get(e).pipe(n(r=>this.handleStatusResponse(r,t)),s(this.handleStatusError.bind(this)))}testSkipCashConnection(){let t=`${this.backendApiUrl}/skipcash/health`;return this.http.get(t).pipe(n(e=>({success:e.success,message:e.success?"SkipCash API is accessible":"SkipCash API is not accessible",error:e.success?void 0:"SkipCash API is not accessible"})),s(e=>(console.error("SkipCash health check error:",e),a(()=>new Error("SkipCash API health check failed")))))}generateOrderId(){let t=Date.now(),e=Math.random().toString(36).substring(2,15);return`CARLA_${t}_${e}`.toUpperCase()}validateAmount(t){return t>0&&t<=this.maxAmount}formatAmount(t,e="QAR"){return new Intl.NumberFormat("en-US",{style:"currency",currency:e}).format(t)}redirectToPayment(t){t&&t.trim()&&(window.location.href=t)}handlePaymentCallbackFromUrl(){let t=new URLSearchParams(window.location.search),e=t.get("order_id"),r=t.get("status"),c=t.get("transaction_id"),u=t.get("amount"),y=t.get("currency");if(!e||!r)return{orderId:"",status:"failed",error:"Missing required callback parameters"};let g=this.validatePaymentStatus(r),h=u?parseFloat(u):void 0;return{orderId:e,status:g,amount:h,currency:y||"QAR",transactionId:c||void 0}}getPaymentSuccessUrl(t){let e=i.skipCash.returnUrl;return t?`${e}${t}`:e}getPaymentCancelUrl(t){let e=i.skipCash.cancelUrl;return t?`${e}${t}`:e}logPaymentAttempt(t){console.log("Payment attempt:",{orderId:t.orderId,amount:t.amount,currency:t.currency,customerEmail:t.customerEmail,timestamp:new Date().toISOString()})}logPaymentResult(t,e,r){console.log("Payment result:",{orderId:t,status:e,error:r,timestamp:new Date().toISOString()})}buildPaymentPayload(t){return{amount:t.amount,currency:t.currency,customerName:t.customerName,customerEmail:t.customerEmail,customerPhone:t.customerPhone,description:t.description,returnUrl:t.returnUrl,cancelUrl:t.cancelUrl,orderId:t.orderId}}handlePaymentCreationResponse(t){return console.log("SkipCash payment creation response:",t),t.success?{success:!0,data:t.data}:{success:!1,error:t.error||"Payment creation failed"}}handlePaymentError(t){return console.error("Payment creation error:",t),a(()=>new Error("Failed to create payment"))}handleStatusResponse(t,e){if(t.success&&t.data){let r=t.data.status||"pending",c=this.validatePaymentStatus(r);return{orderId:t.data.order_id||e,status:c,amount:t.data.amount,currency:t.data.currency,transactionId:t.data.transaction_id}}else return{orderId:e,status:"failed",error:t.error||"Failed to check payment status"}}handleStatusError(t){return console.error("Payment status check error:",t),a(()=>new Error("Failed to check payment status"))}validatePaymentStatus(t){return this.validPaymentStatuses.includes(t)?t:"failed"}static \u0275fac=function(e){return new(e||o)(d(m))};static \u0275prov=l({token:o,factory:o.\u0275fac,providedIn:"root"})};export{p as a};
