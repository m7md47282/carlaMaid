{
  "version": 3,
  "sources": ["src/app/blogs-list/blogs-list.component.ts", "src/app/blogs-list/blogs-list.component.html"],
  "sourcesContent": ["import { Component } from '@angular/core';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { RouterModule } from '@angular/router';\r\nimport { TranslateModule, TranslateService } from '@ngx-translate/core';\r\nimport { SharedService } from '../shared/services/shared.service';\r\nimport { WordPressService } from '../shared/services/word-press.service';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-blogs-list',\r\n  standalone: true,\r\n  imports: [\r\n    TranslateModule,\r\n    RouterModule,\r\n\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  templateUrl: './blogs-list.component.html',\r\n  styleUrl: './blogs-list.component.sass'\r\n})\r\nexport class BlogsListComponent {\r\n  lang: string = 'en';\r\n  posts!: any[];\r\n  blogsPosts: any[] = [];\r\n  selectedPost: any;\r\n\r\n  private selectedPostSource = new BehaviorSubject<any>(null); // to send the post \r\n  selectedPost$ = this.selectedPostSource.asObservable(); // to send the post \r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    protected _sharedService: SharedService,\r\n    private _wordPressService: WordPressService,\r\n    private router: Router\r\n  ) {\r\n    this.lang = this.translateService.currentLang || 'en';\r\n    this.translateService.onLangChange.subscribe(() => {\r\n      this.lang = this.translateService.currentLang || 'en';\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._sharedService.selectedPost$.subscribe(post => {\r\n      this.selectedPost = post;\r\n    });\r\n    this.getBlogsPosts();\r\n  }\r\n\r\n\r\n getFirstImage(html: string): string | null {\r\n    const doc = new DOMParser().parseFromString(html, \"text/html\");\r\n    const img = doc.querySelector(\"img\");\r\n    return img ? img.src : \"../../assets/images/posts/default.png\";\r\n  }\r\n  getBlogsPosts(): void {\r\n    const postsPage = 'blogs';\r\n    const categoriesNames = [postsPage, this.lang];\r\n\r\n    const params = {\r\n      per_page: 100,\r\n      page: 1\r\n    };\r\n\r\n    this._wordPressService.getPostsByCategoriesNames(postsPage, categoriesNames, params).subscribe({\r\n      next: (value: any) => {\r\n        this.blogsPosts = value;\r\n        this.posts = value;\r\n      }\r\n    });\r\n  }\r\n\r\n  sendPost(postId: any) {\r\n    this.router.navigate(['/view-blogs', postId]);\r\n  }\r\n}\r\n", "<section class=\"section-1 center flex-column\">\r\n    <h1 class=\"text-align-center hero-title\">{{\"shared.BestCleaningCompanyInQatar\" | translate}}</h1>\r\n</section>\r\n\r\n\r\n<section class=\"section-7 fade-in animation-delay\">\r\n    <h1 class=\"primary-text-color center title-size\">{{ 'blogs.latestNewAndBlogs' | translate }}</h1>\r\n\r\n    <div class=\"gap-30 flex-wrap center new-blogs fade-in-animation\">\r\n        @for (post of blogsPosts; track $index) {\r\n\r\n        <figure class=\"service-item center\" (click)=\"sendPost(post.id)\"\r\n            [style.backgroundImage]=\"'url(' + getFirstImage(post.content.rendered) + ')'\"\r\n            style=\"background-size: cover; background-position: center;\">\r\n            <figure class=\"service-content\">\r\n                <h3>{{_sharedService.stripHtml(post.title.rendered)}}</h3>\r\n                <p>{{_sharedService.stripHtml(post.content.rendered) | slice:0:200}}<span\r\n                        *ngIf=\"_sharedService.stripHtml(post.content.rendered).length > 200\">...</span></p>\r\n            </figure>\r\n        </figure>\r\n        }\r\n    </div>\r\n\r\n</section>"],
  "mappings": "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",
  "names": []
}
